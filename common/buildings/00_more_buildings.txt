#Infrastructure

road_network = {
	cost = 200			#Roads are expensive!
	time = 36
	
	build_trigger = {
        OR = {
			is_capital = yes
			province_has_center_of_trade_of_level = 2
			province_has_center_of_trade_of_level = 3
			any_neighbor_province = {
				has_building = road_network
			}
		}
    }
	
	modifier = {
		local_friendly_movement_speed = 0.2 #Troop movement and whatnot
		local_hostile_movement_speed = 0.1
		province_trade_power_modifier = 0.25 #Toll roads
		allowed_num_of_buildings = 2 #Adding a bit of a reason to actually build roads.
	}
	
	ai_will_do = {
		factor = 10 #The AI does consider the trade power, but I did not see a single road being built, so increasing this for now.
	}
}

mb_canal = {
	cost = 200			#Stuff
	time = 36
	
	build_trigger = {
        OR = {
			has_port = yes
			any_neighbor_province = {
				has_building = mb_canal
			}
		}
    }
	
	modifier = {
		local_development_cost = -0.2 #Canals allow trade, thus furthering development
		province_trade_power_modifier = 0.25 #Promotes trade.
		allowed_num_of_buildings = 2 #Adding a bit of a reason to actually build canals.
	}
	
	ai_will_do = {
		factor = 10 #The AI does consider the trade power, but I did not see a single canal being built, so increasing this for now.
	}
}

grain_depot = {
	cost = 100			#Stuff
	time = 36
	
	modifier = {
		local_monthly_devastation = -0.1
	}
	
	ai_will_do = {
		factor = 80 #AI should avoid this in provinces with no devastation.
		modifier = {
			factor = 1.25
			devastation = 10
		}
		modifier = {
			factor = 1.25
			devastation = 20
		}
		modifier = {
			factor = 1.5
			devastation = 30
		}
		modifier = {
			factor = 1.5
			devastation = 40
		}
		modifier = {
			factor = 1.5
			devastation = 50
		}
		modifier = {
			factor = 1.5
			devastation = 60
		}
		modifier = {
			factor = 2
			devastation = 70
		}
		modifier = {
			factor = 2
			devastation = 80
		}
		modifier = {
			factor = 2.5
			devastation = 90
		}
	}
}

#Manufactory(-ish)

mint = {
	#manufactory = {
	#}
	cost = 500			#This is very much like a manufactory
	time = 36
	
	build_trigger = {
		trade_goods = gold
        #development = 30
    }
	
	keep_trigger = {
		trade_goods = gold
	}
	
	modifier = {
		trade_goods_size_modifier = 1
		global_tax_modifier = 0.05
		monthly_gold_inflation_modifier = 0.05
		#inflation_reduction = -0.1 #Logically, this costs you 0.3 admin points/month/building. I think this is a sensible matchup.
	}
	#show_separate = yes # Means as a manufactory it will be shown according to the old way
	
	ai_will_do = {
		factor = 6
		#Lots of factors taken from BT manufactories
		modifier = {
			factor = 0.5
			FROM = { inflation = 5 }
		}	#Does not want to build if has high inflation
		modifier = {
			factor = 0.4
			FROM = { inflation = 10 }
		}	#Does not want to build if has high inflation
		modifier = {
			factor = 0.3
			FROM = { inflation = 15 }
		}	#Does not want to build if has high inflation
		modifier = {
			factor = 0.2
			FROM = { inflation = 20 }
		}	#Does not want to build if has high inflation
		modifier = {
			factor = 0.1
			FROM = { inflation = 25 }
		}	#AI, the fuck you doing?
		modifier = {
			factor = 0.9
			FROM = { technology_group = eastern }
		}	#Minor penalty for eastern tech
		modifier = {
			factor = 0.6
			FROM = {
				OR = {
					technology_group = ottoman
					technology_group = muslim
				}
			}
		}	#Lesser penalty for non european medium-high tech groups.
		modifier = {
			factor = 0.4
			FROM = {
				OR = {
					technology_group = indian
					technology_group = east_african
					technology_group = chinese
					technology_group = sub_saharan
					technology_group = central_african
					technology_group = nomad_group
				}
			}
		}	#Penalty for medium-low tech groups
		modifier = {
			factor = 0.2
			FROM = {
				OR = {
					technology_group = mesoamerican
					technology_group = andean
					technology_group = north_american
					technology_group = south_american
					#Any other future new world cultures should be added here
				}
			}
		}	#Much like the university, some technology groups simply did not have the infrastructure, history, or circumstance to evolve and develop in this way.
		modifier = {
			factor = 1.5
			FROM = {				
				is_great_power = yes
			}
		}	#Great powers get a sustantial bonus, putting Muslims on par with Europeans, other Old World techs on par with Muslims, and rocketing European powers even higher.
		modifier = {
			factor = 0.1
			FROM = {
				AND = {
					NOT = { technology_group = western }
					NOT = { total_development = 100 }
				}
			}
		}	#Small non western AI countries shouldn't be grasping like this, institutions can spread to them from bigger neighbours. Further penalty even beyond the tech group penalty above. 
		modifier = {
			factor = 1.3
			owner = { ruler_has_personality = entrepreneur_personality }
		}
		modifier = {
			factor = 1.3
			owner = { ruler_has_personality = industrious_personality }
		}
		modifier = {
			factor = 1.3
			owner = { full_idea_group = economic_ideas }
		}
		modifier = {
			factor = 1.1
			base_production = 4
		}
		modifier = {
			factor = 1.2
			base_production = 8
		}
		modifier = {
			factor = 1.4
			base_production = 12
		}
	}
}

#Fortifications

earth_rampart = {
	cost = 50			#Addon fortifications. Should be comparatively cheap.
	time = 12
	
	build_trigger = {
		OR = {
			has_building = fort_15th
			has_building = fort_16th
			has_building = fort_17th
			has_building = fort_18th
		}
    }
	
	keep_trigger = {
		OR = {
			has_building = fort_15th
			has_building = fort_16th
			has_building = fort_17th
			has_building = fort_18th
		}
	}
	
	modifier = {
		local_hostile_attrition = 1
	}
	
	ai_will_do = {
		factor = 1
		modifier = {
			factor = 500 #To get over the 0.01% base value.
			any_neighbor_province = { #This is intended to check if the country at hand is rivalling or is threatened by a neighbour. Whether this actually works that way, I'm not sure.
				OR = {
					owner = { 
						is_threat = FROM
					}
					owner = {
						is_rival = FROM
					}
				}
			}
		}
	}
}

tenaille = {
	cost = 100			#Addon fortifications. Should be comparatively cheap.
	time = 24
	
	make_obsolete = earth_rampart
	
	build_trigger = {
		OR = {
			has_building = fort_16th
			has_building = fort_17th
			has_building = fort_18th
		}
    }
	
	keep_trigger = {
		OR = {
			has_building = fort_16th
			has_building = fort_17th
			has_building = fort_18th
		}
	}
	
	modifier = {
		local_defensiveness = 0.1
		max_attrition = 2
		local_hostile_attrition = 2
	}
	
	ai_will_do = {
		factor = 1
		modifier = {
			factor = 1000 #To get over the 0.01% base value.
			any_neighbor_province = { #This is intended to check if the country at hand is rivalling or is threatened by a neighbour. Whether this actually works that way, I'm not sure.
				OR = {
					owner = { 
						is_threat = FROM
					}
					owner = {
						is_rival = FROM
					}
				}
			}
		}
	}
}

redoubt = {
	cost = 200			#Addon fortifications. Should be comparatively cheap.
	time = 48
	
	build_trigger = {
		OR = {
			has_building = fort_17th
			has_building = fort_18th
		}
    }
	
	keep_trigger = {
		OR = {
			has_building = fort_17th
			has_building = fort_18th
		}
	}
	
	make_obsolete = tenaille
	
	modifier = {
		local_defensiveness = 0.2
		max_attrition = 4
		local_hostile_attrition = 4
	}
	
	ai_will_do = {
		factor = 1
		modifier = {
			factor = 2000 #To get over the 0.01% base value.
			any_neighbor_province = { #This is intended to check if the country at hand is rivalling or is threatened by a neighbour. Whether this actually works that way, I'm not sure.
				OR = {
					owner = { 
						is_threat = FROM
					}
					owner = {
						is_rival = FROM
					}
				}
			}
		}
	}
}

#Army Recruitment
armory = {
	cost = 50			#Building an armoury should not cost much.
	time = 12
	
	modifier = {
		#local_regiment_cost = -0.125
		#regiment_recruit_speed = -0.25
		supply_limit = 1
		supply_limit_modifier = 0.50
	}
	
	ai_will_do = {
		factor = 40 #To counterbalance the non-existent economic value of this building, automatically assigning it a value of 0.01. NOTE: AI seems to see some value in supply limit, so lowering.
		modifier = {
			factor = 0.2
			is_state = no
		}
		modifier = { #The AI seems to get +0.02 value factor per manpower dev on a fort province. It's not as bad as the sailors one.
			factor = 0.1
			has_fort_building_trigger = yes
		}
	}
}

arsenal = {
	cost = 200			#Building an armoury should not cost much.
	time = 24
	
	make_obsolete = armory
	
	modifier = {
		local_regiment_cost = -0.25
		regiment_recruit_speed = -0.50 			#Meant to be a bigger boost than the conscription center, but stacks with it. And before you point out this makes a total of -75%, I'm fine with that.
		supply_limit = 2
		supply_limit_modifier = 1.00
	}
	
	ai_will_do = {
		factor = 80 #To counterbalance the non-existent economic value of this building, automatically assigning it a value of 0.01. NOTE: AI seems to see some value in supply limit, so lowering.
		modifier = {
			factor = 0.2
			is_state = no
		}
		modifier = { #The AI seems to get +0.02 value factor per manpower dev on a fort province. It's not as bad as the sailors one.
			factor = 0.1
			has_fort_building_trigger = yes
		}
	}
}

#Navy Recruitment

# naval_arsenal = {
	# cost = 100			#Following the trend of the armoury
	# time = 12
	
	# build_trigger = {
		# has_port = yes
	# }
	
	# modifier = {
		# local_ship_cost = -0.25			
		# ship_recruit_speed = -0.375
	# }
	
	# ai_will_do = {
		# factor = 80 #To counterbalance the non-existent economic value of this building, automatically assigning it a value of 0.01.
		# modifier = {
			# NOT = { FROM = { navy_tradition = 20 } }			#Naval tradition now either encourages or discourages building docks
			# factor = 0.5
		# }
		# modifier = {
			# NOT = { FROM = { navy_tradition = 40 } }			#Naval tradition now either encourages or discourages building docks
			# factor = 0.8
		# }
		# modifier = {
			# FROM = { navy_tradition = 60 }			#Naval tradition now either encourages or discourages building docks
			# factor = 1.2
		# }
		# modifier = {
			# FROM = { navy_tradition = 80 }			#Naval tradition now either encourages or discourages building docks
			# factor = 1.5
		# }
		# modifier = {
			# factor = 1.5
			# FROM = {
				# OR = {			#Heavy handed attempt to encourage historical naval powers
					# culture_group = british			#The second empire on which the sun never sets
					# culture_group = iberian			#The first empire on which the sun never sets
					# primary_culture = dutch			#Punched massively above its weight on the sea during this period
					# primary_culture = venetian			#Remnants of Mediterranean hegemonies and great naval traditions
					# primary_culture = ligurian			#Remnants of Mediterranean hegemonies and great naval traditions
				# }
			# }
		# }
	# }
# }

# naval_base = {
	# cost = 200			#Following the trend of the armoury
	# time = 24

	# build_trigger = {
		# has_port = yes
	# }
	
	# make_obsolete = naval_arsenal
	
	# modifier = {
		# local_ship_cost = -0.50			
		# ship_recruit_speed = -0.75
	# }
	
	# ai_will_do = {
		# factor = 160 #To counterbalance the non-existent economic value of this building, automatically assigning it a value of 0.01.
		# modifier = {
			# NOT = { FROM = { navy_tradition = 20 } }			#Naval tradition now either encourages or discourages building docks
			# factor = 0.5
		# }
		# modifier = {
			# NOT = { FROM = { navy_tradition = 40 } }			#Naval tradition now either encourages or discourages building docks
			# factor = 0.8
		# }
		# modifier = {
			# FROM = { navy_tradition = 60 }			#Naval tradition now either encourages or discourages building docks
			# factor = 1.2
		# }
		# modifier = {
			# FROM = { navy_tradition = 80 }			#Naval tradition now either encourages or discourages building docks
			# factor = 1.5
		# }
		# modifier = {
			# factor = 1.5
			# FROM = {
				# OR = {			#Heavy handed attempt to encourage historical naval powers
					# culture_group = british			#The second empire on which the sun never sets
					# culture_group = iberian			#The first empire on which the sun never sets
					# primary_culture = dutch			#Punched massively above its weight on the sea during this period
					# primary_culture = venetian			#Remnants of Mediterranean hegemonies and great naval traditions
					# primary_culture = ligurian			#Remnants of Mediterranean hegemonies and great naval traditions
				# }
			# }
		# }
	# }
# }

#Level 3 Taxation

tax_assessor = { #Will need re-assessment
	make_obsolete = cathedral
	
	cost = 300	#Lowered a bit to compensate for the lack of missionary strength.		
	time = 48			
	modifier = {
		#local_missionary_strength = 0.02			#BTAddOn changed from 0.03, might slow conversion slightly, but avg dev is also lower, so that might be a good thing
		local_tax_modifier = 1.0 
	}
	
	ai_will_do = {
		factor = 1 #Removed all factors.
	}
}

#Level 3 Production

customs_house = { #Is in reality the Stock Exchange.
	cost = 400			
	time = 48			
	
	make_obsolete = counting_house
	modifier = {
		local_development_cost = -0.3			#BTAddOn new. A little non-cash boost to make this building not worthless when it is too late in the game to make your ducats back from the cost to build it. Note the corresponding dev cost reduction has been removed from universities, where I felt it made less logical sense. Here, production and industry encourage development.
		local_production_efficiency = 1			#BTAddOn changed from 1.0. Part of the comprehensive balance overhaul to adjust buildings to the BT map (with all its new provinces)
	}
	
	allow_in_gold_provinces = no
	
	ai_will_do = {
		factor = 1.34 #Slightly buffed factor to account for the slightly higher cost.
		#BT Addon New factors, range 13 percent to 675 percent
		modifier = {
			factor = 0.2
			OR = {			#AI is strongly discouraged to build this where climate renders development difficult
				has_climate = arctic
				has_climate = arid
				has_climate = tropical
			}
		}
		modifier = {
			factor = 0.65
			OR = {			#AI is discouraged to build this where development isn't really feasible
				has_terrain = steppe
				has_terrain = highlands
				has_terrain = jungle
				has_terrain = desert
				has_terrain = coastal_desert
				has_terrain = glacier
			}
		}
		#Drylands, forest, coastline, marsh, hills, mountains, and savannah receive neither penalty nor bonus
		modifier = {
			factor = 1.5
			OR = {			#AI is encouraged to build this where development is feasible
				has_terrain = farmlands
				has_terrain = grasslands
				has_terrain = woods
			}
		}
		modifier = {
			factor = 1.5
			has_estate = estate_burghers			#Provinces with burgher estates will also be more likely to have workshops
		}
		# modifier = {
			# factor = 1.5
			# FROM = {			#Economically minded governments are more likely to build workshops... that is rather their mandate, no?
				# OR = {
					# government = administrative_monarchy
					# government = administrative_republic
					# government = constitutional_republic
					# government = peasants_republic
				# }
			# }
		# }
		modifier = {
			factor = 2.0
			is_part_of_hre = yes			#HRE was a production powerhouse of this period
		}
	}
}

#Subject-only buildings

march_building = {
	cost = 500			#I think this is sensible, considering you only ever build 1 per subject.
	time = 48

	build_trigger = {
		owner = {
			is_march = yes
		}
		#This does NOT work. Apparently FROM in this case is not the overlord, but rather the province owner.
		# FROM = {  #Test logic just to see whether it actually checks for province owner, or whether it checks for builder country.
			# NOT = { is_subject = yes }
		# }
		is_capital = yes
	}

	keep_trigger = {
		owner = {
			is_march = yes
		}
		#This does NOT work. Apparently FROM in this case is not the overlord, but rather the province owner.
		# FROM = {  #Test logic just to see whether it actually checks for province owner, or whether it checks for builder country.
			# NOT = { is_subject = yes }
		# }
		is_capital = yes
	}
	
	modifier = {
		defensiveness = 0.2
		fort_maintenance_modifier = -0.5
	}
	
	ai_will_do = {
		factor = 500 #AI sees no value in this building, so this brings it to 1% yearly return, i.e AI will build it.
	}
}

embassy = {
	cost = 500			#I think this is sensible, considering you only ever build 1 per subject.
	time = 48

	build_trigger = {
		owner = {
			is_subject = yes
		}
		#This does NOT work. Apparently FROM in this case is not the overlord, but rather the province owner.
		# FROM = {  #Test logic just to see whether it actually checks for province owner, or whether it checks for builder country.
			# NOT = { is_subject = yes }
		# }
		is_capital = yes
	}

	keep_trigger = {
		owner = {
			is_subject = yes
		}
		#This does NOT work. Apparently FROM in this case is not the overlord, but rather the province owner.
		# FROM = {  #Test logic just to see whether it actually checks for province owner, or whether it checks for builder country.
			# NOT = { is_subject = yes }
		# }
		is_capital = yes
	}
	
	modifier = {
		liberty_desire = -15
		#Borked.
		#overlord = {
		#	liberty_desire_from_subject_development = -0.1 #NOTE: This stacks for each embassy you build. Which makes sense, as multiple subjects result in this.
		#}
	}
	
	ai_will_do = {
		factor = 500 #AI sees no value in this building, so this brings it to 1% yearly return, i.e AI will build it.
	}
}

spy_agency = {
	cost = 500			#I think this is sensible, considering you only ever build 1 per subject.
	time = 48

	build_trigger = {
		owner = {
			is_subject = yes
		}
		#This does NOT work. Apparently FROM in this case is not the overlord, but rather the province owner.
		# FROM = {  #Test logic just to see whether it actually checks for province owner, or whether it checks for builder country.
			# NOT = { is_subject = yes }
		# }
		is_capital = yes
	}

	keep_trigger = {
		owner = {
			is_subject = yes
		}
		#This does NOT work. Apparently FROM in this case is not the overlord, but rather the province owner.
		# FROM = {  #Test logic just to see whether it actually checks for province owner, or whether it checks for builder country.
			# NOT = { is_subject = yes }
		# }
		is_capital = yes
	}
	
	modifier = {
		fabricate_claims_cost = -0.33 
		administrative_efficiency = 0.1 #This building is here as a way of buffing subjects a bit.
	}
	
	ai_will_do = {
		factor = 500 #AI sees no value in this building, so this brings it to 1% yearly return, i.e AI will build it.
	}
}

#Area-wide buildings

post_office = {
	cost = 250			#An area-wide effect seems sensible for this price.
	time = 36

	build_trigger = {
		is_state = yes
		#OR = {
			#has_building = post_office
			#has_construction = post_office
			NOT = {
				any_province_in_state = {
					OR = {
						has_building = post_office
						has_construction = post_office
					}
				}
			}
		#}
	}
	
	keep_trigger = { #Copying vanilla for now.
		is_state = yes
		NOT = {
			area_for_scope_province = {
				NOT = { province_id = root }
				owner = {
					tag = ROOT
				}
				OR = {
					has_building = post_office
					has_construction = post_office
				}
			}
		}
	}
	
	modifier = {
		local_institution_spread = 0.5
		province_trade_power_modifier = 0.25
	}
	
	# THIS = Province, FROM = Builder(not nessecairly owner, can be overlord)
	on_built = {
		every_province_in_state = {
			limit = {
				NOT = { province_id = ROOT }
			}
			add_province_modifier = {
				name = post_office_area_modifier
				duration = -1
			}
		}
	}

	# THIS = Province, FROM = Destroyer, Will not be called on buildings made obsolete!
	on_destroyed = { #There's no actual remove province triggered modifier command, is there?
		if = {
			limit = {
				NOT = {
					any_province_in_state = {
						has_building = post_office
					}
				}
			}
			every_province_in_state = {
				remove_province_modifier = post_office_area_modifier
			}
		}
	}
	
	ai_will_do = {
		factor = 1.5 #AI sees value in this building, so factor will be 1.5 (accounting for the vanilla 1.5 factor)
		#Number of provinces in state modifiers
		modifier = { #If the AI only controls 1 province in the state, they shall never build this.
			factor = 0
			NOT = {
				calc_true_if = {
					all_province_in_state = {
						owned_by = FROM
					}
					amount = 2
				}
			}
		}
		modifier = { #2-province states shouldn't get this in most cases.
			factor = 0.5
			NOT = {
				calc_true_if = {
					all_province_in_state = {
						owned_by = FROM
					}
					amount = 3
				}
			}
		}
		modifier = { #4-province states get higher priority.
			factor = 1.5
			calc_true_if = {
				all_province_in_state = {
					owned_by = FROM
				}
				amount = 4
			}
		}
		modifier = { #5-province states get higher priority.
			factor = 1.5
			calc_true_if = {
				all_province_in_state = {
					owned_by = FROM
				}
				amount = 5
			}
		}
		modifier = { #6-province states get higher priority.
			factor = 1.5
			calc_true_if = {
				all_province_in_state = {
					owned_by = FROM
				}
				amount = 6
			}
		}
		modifier = { #7-province states get higher priority.
			factor = 1.5
			calc_true_if = {
				all_province_in_state = {
					owned_by = FROM
				}
				amount = 7
			}
		}
		#Tech-related modifiers
		modifier = {
			factor = 0.3			#One 20th of 6, which is what it would require to roughly match a cathedral in priority with no other modifiers
			FROM = {
				OR = {
					technology_group = mesoamerican
					technology_group = andean
					technology_group = north_american
					technology_group = south_american
					#Any other future new world cultures should be added here
				}
			}
		}	#Much as I love the concept of a bustling university discovering advanced scientific principles while speaking Maori or something equally absurd/obscure, the fact is some technology groups simply did not have the infrastructure, history, or circumstance to evolve in this way. Making it very unlikely
		modifier = {
			factor = 1			#One 6th of 6, which is what it would require to roughly match a cathedral in priority with no other modifiers
			FROM = {
				OR = {
					technology_group = indian
					technology_group = east_african
					technology_group = chinese
					technology_group = sub_saharan
					technology_group = central_african
					technology_group = nomad_group
				}
			}
		}	#Penalty for medium-low tech groups
		modifier = {
			factor = 2			#One 3rd of 6, which is what it would require to roughly match a cathedral in priority with no other modifiers
			FROM = {
				OR = {
					technology_group = ottoman
					technology_group = muslim
				}
			}
		}	#Lesser penalty for non european medium-high tech groups.
		modifier = {
			factor = 3			#half of 6, which is what it would require to roughly match a cathedral in priority with no other modifiers
			FROM = {
				OR = {
					technology_group = eastern
					technology_group = high_american
				}
			}
		}	#Medium range for eastern, and throwing in High American for fun as this is effectively the default level.
		modifier = {
			factor = 4			#Two 3rds of 6, which is what it would require to roughly match a cathedral in priority with no other modifiers
			FROM = { technology_group = western }
		}	#The concept of a university may or may not be a uniquely western concept, but in this specific period, it was a western reality, less so elsewhere. Though as a point of interest, universities were a very different beast in this period than the BA most modern people think of.
		#Dynamix
		modifier = {
			factor = 1.4
			FROM = { is_great_power = yes }			#Primarily to keep Russia, Poland, and Ottomans in line with western, and the top western powers ahead of everyone else, as real history went, but also may potentially help China, India, or any ahistorical superpower in Asia or Africa as well.
		}
		modifier = {
			factor = 1.4
			province_has_center_of_trade_of_level = 1			#Cheap shortcut method to try to get unis in plausible rich centers, especially for alt history non-european unis.
		}
	}
}

glorious_monument = {
	cost = 250			#An area-wide effect seems sensible for this price.
	time = 36


	build_trigger = {
		is_state = yes
		#OR = {
			#has_building = glorious_monument
			#has_construction = glorious_monument
			NOT = {
				any_province_in_state = {
					OR = {
						has_building = glorious_monument
						has_construction = glorious_monument
					}
				}
			}
		#}
	}
	
	keep_trigger = { #Copying vanilla for now.
		is_state = yes
		NOT = {
			area_for_scope_province = {
				NOT = { province_id = root }
				owner = {
					tag = ROOT
				}
				OR = {
					has_building = glorious_monument
					has_construction = glorious_monument
				}
			}
		}
	}
	
	modifier = {
		#Area-wide effects:
		local_unrest = -2
	}
	
	# THIS = Province, FROM = Builder(not nessecairly owner, can be overlord)
	on_built = {
		every_province_in_state = {
			limit = {
				NOT = { province_id = ROOT }
			}
			add_province_modifier = {
				name = glorious_monument_area_modifier
				duration = -1
			}
		}
	}

	# THIS = Province, FROM = Destroyer, Will not be called on buildings made obsolete!
	on_destroyed = { #There's no actual remove province triggered modifier command, is there?
		if = {
			limit = {
				NOT = {
					any_province_in_state = {
						has_building = glorious_monument
					}
				}
			}
			every_province_in_state = {
				remove_province_modifier = glorious_monument_area_modifier
			}
		}
	}
	
	ai_will_do = {
		factor = 200 #AI sees no value in this building, so this brings it to 0.8% yearly return
		#Number of provinces in state modifiers
		modifier = { #If the AI only controls 1 province in the state, they shall never build this.
			factor = 0
			NOT = {
				calc_true_if = {
					all_province_in_state = {
						owned_by = FROM
					}
					amount = 2
				}
			}
		}
		modifier = { #2-province states shouldn't get this in most cases.
			factor = 0.5
			NOT = {
				calc_true_if = {
					all_province_in_state = {
						owned_by = FROM
					}
					amount = 3
				}
			}
		}
		modifier = { #4-province states get higher priority.
			factor = 1.5
			calc_true_if = {
				all_province_in_state = {
					owned_by = FROM
				}
				amount = 4
			}
		}
		modifier = { #5-province states get higher priority.
			factor = 1.5
			calc_true_if = {
				all_province_in_state = {
					owned_by = FROM
				}
				amount = 5
			}
		}
		modifier = { #6-province states get higher priority.
			factor = 1.5
			calc_true_if = {
				all_province_in_state = {
					owned_by = FROM
				}
				amount = 6
			}
		}
		modifier = { #7-province states get higher priority.
			factor = 1.5
			calc_true_if = {
				all_province_in_state = {
					owned_by = FROM
				}
				amount = 7
			}
		}
		modifier = {
			factor = 5
			unrest = 5
		}
		#Dynamix
		modifier = {
			factor = 2
			FROM = {
				ruler_has_personality = conqueror_personality				
			}
		}
		modifier = {
			factor = 2
			FROM = {
				ruler_has_personality = architectural_visionary_personality
			}
		}
		modifier = {
			factor = 2
			FROM = {
				ruler_has_personality = embezzler_personality
			}
		}
		modifier = {
			factor = 2
			FROM = {
				consort_has_personality = conqueror_personality
			}
		}
		modifier = {
			factor = 2
			FROM = {
				consort_has_personality = architectural_visionary_personality
			}
		}
		modifier = {
			factor = 2
			FROM = {
				consort_has_personality = embezzler_personality
			}
		}
	}
}

treasury_office = {
	cost = 250			#An area-wide effect seems sensible for this price.
	time = 36

	allow_in_gold_provinces = no
	
	build_trigger = {
		is_state = yes
		#OR = {
			#has_building = treasury_office
			#has_construction = treasury_office
			NOT = {
				any_province_in_state = {
					OR = {
						has_building = treasury_office
						has_construction = treasury_office
					}
				}
			}
		#}
	}
	
	keep_trigger = { #Copying vanilla for now.
		is_state = yes
		NOT = {
			area_for_scope_province = {
				NOT = { province_id = root }
				owner = {
					tag = ROOT
				}
				OR = {
					has_building = treasury_office
					has_construction = treasury_office
				}
			}
		}
	}
	
	modifier = {
		#Area-wide effects:
		trade_goods_size_modifier = 0.25
	}
	
	# THIS = Province, FROM = Builder(not nessecairly owner, can be overlord)
	on_built = {
		every_province_in_state = {
			limit = {
				NOT = { trade_goods = gold  }
				NOT = { province_id = ROOT }
			}
			add_province_modifier = {
				name = treasury_office_area_modifier
				duration = -1
			}
		}
	}

	# THIS = Province, FROM = Destroyer, Will not be called on buildings made obsolete!
	on_destroyed = { #There's no actual remove province triggered modifier command, is there?
		if = {
			limit = {
				NOT = {
					any_province_in_state = {
						has_building = treasury_office
					}
				}
			}
			every_province_in_state = {
				remove_province_modifier = treasury_office_area_modifier
			}
		}
	}
	
	ai_will_do = {
		factor = 1 #AI sees value in this building, so factor will be 1.
		#Number of provinces in state modifiers
		modifier = { #If the AI only controls 1 province in the state, they shall never build this.
			factor = 0
			NOT = {
				calc_true_if = {
					all_province_in_state = {
						owned_by = FROM
					}
					amount = 2
				}
			}
		}
		modifier = { #2-province states shouldn't get this in most cases.
			factor = 0.5
			NOT = {
				calc_true_if = {
					all_province_in_state = {
						owned_by = FROM
					}
					amount = 3
				}
			}
		}
		modifier = { #4-province states get higher priority.
			factor = 1.5
			calc_true_if = {
				all_province_in_state = {
					owned_by = FROM
				}
				amount = 4
			}
		}
		modifier = { #5-province states get higher priority.
			factor = 1.5
			calc_true_if = {
				all_province_in_state = {
					owned_by = FROM
				}
				amount = 5
			}
		}
		modifier = { #6-province states get higher priority.
			factor = 1.5
			calc_true_if = {
				all_province_in_state = {
					owned_by = FROM
				}
				amount = 6
			}
		}
		modifier = { #7-province states get higher priority.
			factor = 1.5
			calc_true_if = {
				all_province_in_state = {
					owned_by = FROM
				}
				amount = 7
			}
		}
		modifier = { #4 BP
			factor = 2
			base_production = 4
		}
		modifier = { #8 BP
			factor = 3
			base_production = 8
		}
		modifier = { #12 BP
			factor = 4
			base_production = 12
		}
		modifier = { #Provinces with burgher estates will also be more likely to have
			factor = 1.5
			has_estate = estate_burghers			
		}
		# modifier = { #Economically minded governments are more likely to build
			# factor = 1.5
			# # FROM = {			
				# # OR = {
					# # government = administrative_monarchy
					# # government = administrative_republic
					# # government = constitutional_republic
					# # government = peasants_republic
				# # }
			# # }
		# }
		modifier = {
			factor = 2.0
			is_part_of_hre = yes			#HRE was a production powerhouse of this period
		}
	
	}
}

constable = {
	cost = 250			#An area-wide effect seems sensible for this price.
	time = 36
	
	build_trigger = {
		is_state = yes
		#OR = {
			#has_building = constable
			#has_construction = constable
			NOT = {
				any_province_in_state = {
					OR = {
						has_building = constable
						has_construction = constable
					}
				}
			}
		#}
	}
	
	keep_trigger = { #Copying vanilla for now.
		is_state = yes
		NOT = {
			area_for_scope_province = {
				NOT = { province_id = root }
				owner = {
					tag = ROOT
				}
				OR = {
					has_building = constable
					has_construction = constable
				}
			}
		}
	}
	
	modifier = {
		#Area-wide effects:
		local_tax_modifier = 0.33
	}
	
	# THIS = Province, FROM = Builder(not nessecairly owner, can be overlord)
	on_built = {
		every_province_in_state = {
			limit = {
				NOT = { province_id = ROOT }
			}
			add_province_modifier = {
				name = constable_area_modifier
				duration = -1
			}
		}
	}

	# THIS = Province, FROM = Destroyer, Will not be called on buildings made obsolete!
	on_destroyed = { #There's no actual remove province triggered modifier command, is there?
		if = {
			limit = {
				NOT = {
					any_province_in_state = {
						has_building = constable
					}
				}
			}
			every_province_in_state = {
				remove_province_modifier = constable_area_modifier
			}
		}
	}
	
	ai_will_do = {
		factor = 1 #AI sees value in this building, so factor will be 1.
		#Number of provinces in state modifiers
		modifier = { #If the AI only controls 1 province in the state, they shall never build this.
			factor = 0
			NOT = {
				calc_true_if = {
					all_province_in_state = {
						owned_by = FROM
					}
					amount = 2
				}
			}
		}
		modifier = { #2-province states shouldn't get this in most cases.
			factor = 0.5
			NOT = {
				calc_true_if = {
					all_province_in_state = {
						owned_by = FROM
					}
					amount = 3
				}
			}
		}
		modifier = { #4-province states get higher priority.
			factor = 1.5
			calc_true_if = {
				all_province_in_state = {
					owned_by = FROM
				}
				amount = 4
			}
		}
		modifier = { #5-province states get higher priority.
			factor = 1.5
			calc_true_if = {
				all_province_in_state = {
					owned_by = FROM
				}
				amount = 5
			}
		}
		modifier = { #6-province states get higher priority.
			factor = 1.5
			calc_true_if = {
				all_province_in_state = {
					owned_by = FROM
				}
				amount = 6
			}
		}
		modifier = { #7-province states get higher priority.
			factor = 1.5
			calc_true_if = {
				all_province_in_state = {
					owned_by = FROM
				}
				amount = 7
			}
		}
		modifier = { #4 BT
			factor = 2
			base_tax = 4
		}
		modifier = { #8 BT
			factor = 3
			base_tax = 8
		}
		modifier = { #12 BT
			factor = 4
			base_tax = 12
		}
		# modifier = { #Economically minded governments are more likely to build
			# factor = 1.5
			# FROM = {			
				# OR = {
					# government = administrative_monarchy
					# government = administrative_republic
					# government = constitutional_republic
					# government = peasants_republic
				# }
			# }
		# }
	}
}

#Deprecated in favour of state_house for now. May move it out of manufactory territory.
# royal_palace = {
	# cost = 250			#An area-wide effect seems sensible for this price.
	# time = 36

	# build_trigger = {
		# is_state = yes
		# OR = {
			# has_building = royal_palace
			# AND = {
				# NOT = {
					# any_province_in_state = {
						# has_building = royal_palace
					# }
				# }
				# NOT = { #Don't want multiple of the same building being built.
					# any_province_in_state = {
						# has_construction = building
						# NOT = { construction_progress = 0.2 }
					# }
				# }
			# }
		# }
	# }
	
	# modifier = {
		# #Area-wide effects:
		# local_autonomy = -0.15
	# }
	
	# # THIS = Province, FROM = Builder(not nessecairly owner, can be overlord)
	# on_built = {
		# every_province_in_state = {
			# limit = {
				# NOT = { province_id = ROOT }
			# }
			# add_province_modifier = {
				# name = royal_palace_area_modifier
				# duration = -1
			# }
		# }
	# }

	# # THIS = Province, FROM = Destroyer, Will not be called on buildings made obsolete!
	# on_destroyed = { #There's no actual remove province triggered modifier command, is there?
		# if = {
			# limit = {
				# NOT = {
					# any_province_in_state = {
						# has_building = royal_palace
					# }
				# }
			# }
			# every_province_in_state = {
				# remove_province_modifier = royal_palace_area_modifier
			# }
		# }
	# }
	
	# ai_will_do = {
		# factor = 250 #AI sees no value in this building, so this brings it to 1% yearly return, i.e AI will build it.
		# #Number of provinces in state modifiers
		# modifier = { #If the AI only controls 1 province in the state, they shall never build this.
			# factor = 0
			# NOT = {
				# calc_true_if = {
					# all_province_in_state = {
						# owned_by = FROM
					# }
					# amount = 2
				# }
			# }
		# }
		# modifier = { #2-province states shouldn't get this in most cases.
			# factor = 0.5
			# NOT = {
				# calc_true_if = {
					# all_province_in_state = {
						# owned_by = FROM
					# }
					# amount = 3
				# }
			# }
		# }
		# modifier = { #4-province states get higher priority.
			# factor = 1.5
			# calc_true_if = {
				# all_province_in_state = {
					# owned_by = FROM
				# }
				# amount = 4
			# }
		# }
		# modifier = { #5-province states get higher priority.
			# factor = 1.5
			# calc_true_if = {
				# all_province_in_state = {
					# owned_by = FROM
				# }
				# amount = 5
			# }
		# }
		# modifier = { #6-province states get higher priority.
			# factor = 1.5
			# calc_true_if = {
				# all_province_in_state = {
					# owned_by = FROM
				# }
				# amount = 6
			# }
		# }
		# modifier = { #7-province states get higher priority.
			# factor = 1.5
			# calc_true_if = {
				# all_province_in_state = {
					# owned_by = FROM
				# }
				# amount = 7
			# }
		# }
		
		# modifier = { #Prevent if territory
			# factor = 0
			# NOT = { is_state = yes	}
		# }
		# modifier = { #Development
			# factor = 0.5
			# NOT = { development = 5	}
		# }
		# modifier = { #Development
			# factor = 1.5
			# development = 20			
		# }
		# modifier = { #Autonomy
			# factor = 0.8
			# NOT = { local_autonomy = 10 }
		# }
		# modifier = { #Autonomy
			# factor = 1.2
			# local_autonomy = 25	
		# }
		# modifier = { #Autonomy
			# factor = 2
			# local_autonomy = 50
		# }
		# modifier = { #Autonomy
			# factor = 3
			# local_autonomy = 75	
		# }
	# }
# }
#Deprecated for soldier_households.
# war_college = {
	# cost = 250			#An area-wide effect seems sensible for this price.
	# time = 36

	# build_trigger = {
		# is_state = yes
		# OR = {
			# has_building = war_college
			# AND = {
				# NOT = {
					# any_province_in_state = {
						# has_building = war_college
					# }
				# }
				# NOT = { #Don't want multiple of the same building being built.
					# any_province_in_state = {
						# has_construction = building
						# NOT = { construction_progress = 0.2 }
					# }
				# }
			# }
		# }
	# }
	
	# modifier = {
		# #Area-wide effects:
		# local_manpower_modifier = 0.5
	# }
	
	# # THIS = Province, FROM = Builder(not nessecairly owner, can be overlord)
	# on_built = {
		# every_province_in_state = {
			# limit = {
				# NOT = { province_id = ROOT }
			# }
			# add_province_modifier = {
				# name = war_college_area_modifier
				# duration = -1
			# }
		# }
	# }

	# # THIS = Province, FROM = Destroyer, Will not be called on buildings made obsolete!
	# on_destroyed = { #There's no actual remove province triggered modifier command, is there?
		# if = {
			# limit = {
				# NOT = {
					# any_province_in_state = {
						# has_building = war_college
					# }
				# }
			# }
			# every_province_in_state = {
				# remove_province_modifier = war_college_area_modifier
			# }
		# }
	# }
	
	# ai_will_do = {
		# factor = 150 #AI sees no value in this building, so this brings it to 1% yearly return, i.e AI will build it.
		# #Number of provinces in state modifiers
		# modifier = { #If the AI only controls 1 province in the state, they shall never build this.
			# factor = 0
			# NOT = {
				# calc_true_if = {
					# all_province_in_state = {
						# owned_by = FROM
					# }
					# amount = 2
				# }
			# }
		# }
		# modifier = { #2-province states shouldn't get this in most cases.
			# factor = 0.5
			# NOT = {
				# calc_true_if = {
					# all_province_in_state = {
						# owned_by = FROM
					# }
					# amount = 3
				# }
			# }
		# }
		# modifier = { #4-province states get higher priority.
			# factor = 1.5
			# calc_true_if = {
				# all_province_in_state = {
					# owned_by = FROM
				# }
				# amount = 4
			# }
		# }
		# modifier = { #5-province states get higher priority.
			# factor = 1.5
			# calc_true_if = {
				# all_province_in_state = {
					# owned_by = FROM
				# }
				# amount = 5
			# }
		# }
		# modifier = { #6-province states get higher priority.
			# factor = 1.5
			# calc_true_if = {
				# all_province_in_state = {
					# owned_by = FROM
				# }
				# amount = 6
			# }
		# }
		# modifier = { #7-province states get higher priority.
			# factor = 1.5
			# calc_true_if = {
				# all_province_in_state = {
					# owned_by = FROM
				# }
				# amount = 7
			# }
		# }
		# modifier = {
			# factor = 1.5
			# OR = {
				# has_estate = estate_nobles			#Provinces with noble estates will also be more likely to have barracks
				# has_estate = estate_nomadic_tribes			#Provinces with nomadic estates will also be more likely to have barracks
				# has_estate = estate_cossacks			#Provinces with cossack estates will also be more likely to have barracks
			# }
		# }
		# modifier = {
			# NOT = { FROM = { army_tradition = 20 } }			#Army tradition now either encourages or discourages building barracks
			# factor = 0.5
		# }
		# modifier = {
			# NOT = { FROM = { army_tradition = 40 } }			#Army tradition now either encourages or discourages building barracks
			# factor = 0.8
		# }
		# modifier = {
			# FROM = { army_tradition = 60 }			#Army tradition now either encourages or discourages building barracks
			# factor = 1.2
		# }
		# modifier = {
			# FROM = { army_tradition = 80 }			#Army tradition now either encourages or discourages building barracks
			# factor = 1.5
		# }
		# modifier = {
			# NOT = { owner = { manpower_percentage = 0.35 } }			#Further encouraged if low on manpower
			# factor = 1.2
		# }
		# modifier = {
			# owner = { manpower_percentage = 0.8 }			#Slightly discouraged if plenty of manpower
			# factor = 0.9
		# }
		# modifier = {
			# factor = 1.5
			# FROM = {			#Military minded governments are more likely to build barracks... that is rather their mandate, no?
				# OR = {
					# government = feudal_monarchy
					# government = enlightened_despotism
					# government = revolutionary_empire
					# government = steppe_horde
				# }
			# }
		# }
		# modifier = {
			# factor = 1.5
			# FROM = {
				# OR = {			#Heavy handed attempt to encourage historical miltary powers
					# culture_group = french			#The great blue blob
					# primary_culture = prussian			#Punched massively above its weight during this period
					# primary_culture = saxon			#Punched massively above its weight during this period
					# primary_culture = pommeranian			#Punched massively above its weight during this period
					# primary_culture = austrian			#Somehow resisted the Ottomans and largely kept the empire together
					# primary_culture = swedish			#Punched above its weight during this period
					# primary_culture = turkish			#The great green blob
					# #Other cultures around the world might deserve this as well, but this is -Europa- Universalis, so I'm only focusing on Europe and environs for now
				# }
			# }
		# }
	# }
# }
#Deprecated for impressment_offices
# admiralty = {
	# cost = 250			#An area-wide effect seems sensible for this price.
	# time = 36

	# build_trigger = {
		# is_state = yes
		# OR = {
			# has_building = admiralty
			# AND = {
				# NOT = {
					# any_province_in_state = {
						# has_building = admiralty
					# }
				# }
				# NOT = { #Don't want multiple of the same building being built.
					# any_province_in_state = {
						# has_construction = building
						# NOT = { construction_progress = 0.2 }
					# }
				# }
			# }
		# }
		# has_port = yes
	# }
	
	# modifier = {
		# #Area-wide effects:
		# local_sailors_modifier = 2
	# }
	
	# # THIS = Province, FROM = Builder(not nessecairly owner, can be overlord)
	# on_built = {
		# every_province_in_state = {
			# limit = {
				# has_port = yes
				# NOT = { province_id = ROOT }
			# }
			# add_province_modifier = {
				# name = admiralty_area_modifier
				# duration = -1
			# }
		# }
	# }

	# # THIS = Province, FROM = Destroyer, Will not be called on buildings made obsolete!
	# on_destroyed = { #There's no actual remove province triggered modifier command, is there?
		# if = {
			# limit = {
				# NOT = {
					# any_province_in_state = {
						# has_building = admiralty
					# }
				# }
			# }
			# every_province_in_state = {
				# remove_province_modifier = admiralty_area_modifier
			# }
		# }
	# }
	
	# ai_will_do = {
		# factor = 200 #AI sees no value in this building, so this brings it to 1% yearly return, i.e AI will build it.
		# #Number of provinces in state modifiers
		# modifier = { #If the AI only controls 1 province in the state, they shall never build this.
			# factor = 0
			# NOT = {
				# calc_true_if = {
					# all_province_in_state = {
						# owned_by = FROM
						# has_port = yes
					# }
					# amount = 2
				# }
			# }
		# }
		# modifier = { #2-province states shouldn't get this in most cases.
			# factor = 0.5
			# NOT = {
				# calc_true_if = {
					# all_province_in_state = {
						# owned_by = FROM
						# has_port = yes
					# }
					# amount = 3
				# }
			# }
		# }
		# modifier = { #4-province states get higher priority.
			# factor = 1.5
			# calc_true_if = {
				# all_province_in_state = {
					# owned_by = FROM
					# has_port = yes
				# }
				# amount = 4
			# }
		# }
		# modifier = { #5-province states get higher priority.
			# factor = 1.5
			# calc_true_if = {
				# all_province_in_state = {
					# owned_by = FROM
					# has_port = yes
				# }
				# amount = 5
			# }
		# }
		# modifier = { #6-province states get higher priority.
			# factor = 1.5
			# calc_true_if = {
				# all_province_in_state = {
					# owned_by = FROM
					# has_port = yes
				# }
				# amount = 6
			# }
		# }
		# modifier = { #7-province states get higher priority.
			# factor = 1.5
			# calc_true_if = {
				# all_province_in_state = {
					# owned_by = FROM
					# has_port = yes
				# }
				# amount = 7
			# }
		# }
		# modifier = {
			# NOT = { owner = { sailors_percentage = 0.35 } }			#Further encouraged if low on sailors
			# factor = 1.2
		# }
		# modifier = {
			# owner = { sailors_percentage = 0.8 }			#Slightly discouraged if plenty of sailors
			# factor = 0.9
		# }
		# modifier = {
			# NOT = { FROM = { navy_tradition = 20 } }			#Naval tradition now either encourages or discourages building docks
			# factor = 0.5
		# }
		# modifier = {
			# NOT = { FROM = { navy_tradition = 40 } }			#Naval tradition now either encourages or discourages building docks
			# factor = 0.8
		# }
		# modifier = {
			# FROM = { navy_tradition = 60 }			#Naval tradition now either encourages or discourages building docks
			# factor = 1.2
		# }
		# modifier = {
			# FROM = { navy_tradition = 80 }			#Naval tradition now either encourages or discourages building docks
			# factor = 1.5
		# }
		# modifier = {
			# factor = 1.5
			# FROM = {
				# OR = {			#Heavy handed attempt to encourage historical naval powers
					# culture_group = british			#The second empire on which the sun never sets
					# culture_group = iberian			#The first empire on which the sun never sets
					# primary_culture = dutch			#Punched massively above its weight on the sea during this period
					# primary_culture = venetian			#Remnants of Mediterranean hegemonies and great naval traditions
					# primary_culture = ligurian			#Remnants of Mediterranean hegemonies and great naval traditions
				# }
			# }
		# }
	# }
# }


















